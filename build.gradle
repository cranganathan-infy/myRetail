plugins {
    id 'org.springframework.boot' version '2.3.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'groovy'
    id 'codenarc'
    id 'jacoco'
}
apply plugin: "codenarc"

group = 'com.assessment'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.codehaus.groovy:groovy'
    implementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'
    compile 'org.springframework.boot:spring-boot-starter-data-mongodb'
    compile 'org.springframework.boot:spring-boot-starter-validation'
    testCompile('org.spockframework:spock-core:1.3-groovy-2.5')
    testCompile('org.spockframework:spock-spring:1.3-groovy-2.5')
    testCompile "info.solidsoft.spock:spock-global-unroll:0.5.0"

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'
    //swagger dependencies

    compile "io.springfox:springfox-swagger2:2.6.1"
    compile "io.springfox:springfox-swagger-ui:2.6.1"
}

codenarc {
    toolVersion = "1.3"
}

codenarcMain {
    ignoreFailures false
    configFile file("config/codenarc/CodeNarcMainRules.groovy")
    maxPriority1Violations 0
    maxPriority2Violations 0
    maxPriority3Violations 0

}

codenarcTest {
    ignoreFailures false
    configFile file("config/codenarc/CodeNarcTestRules.groovy")
    maxPriority1Violations 0
    maxPriority2Violations 0
    maxPriority3Violations 0
}

test {
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
        html.enabled true
        html.destination file("${buildDir}/jacocoHtml")
    }
}

jacoco {
    toolVersion = "0.8.5"
    reportsDir = file("$buildDir/jacoco")
}

springBoot {
    buildInfo()
}
